---
title: "Untitled"
format: html
---

```{r}
# Kapitel 4.1: Minimal-Shiny-App
# -----------------------------
# Erstelle eine Datei "app.R" mit diesem Inhalt
# und fuehre sie mit "Run App" in RStudio aus.

library(shiny)
library(tidyverse)
library(leaflet)

# UI: Layout
ui <- fluidPage(
  titlePanel("Windpark Dashboard"),
  
  sidebarLayout(
    sidebarPanel(
      # Einfacher Input: Auswahl nach Betreiber
      selectInput("betreiber", "Betreiber auswaehlen:",
                  choices = unique(my_data$Betreiber),
                  selected = unique(my_data$Betreiber)[1])
    ),
    
    mainPanel(
      # Plot-Output
      plotOutput("leistungPlot"),
      # Leaflet-Karten-Output
      leafletOutput("mapPlot")
    )
  )
)

# Server-Logik
server <- function(input, output, session) {
  
  # Gefilterte Daten
  filteredData <- reactive({
    my_data %>% 
      filter(Betreiber == input$betreiber)
  })
  
  # Plot: Balkendiagramm ueber gefilterte Daten
  output$leistungPlot <- renderPlot({
    ggplot(filteredData(), aes(x = Windpark.ID,
                               y = Gesamtleistung..MW.)) +
      geom_col(fill = "darkgreen") +
      labs(title = paste("Gesamtleistung MW -", input$betreiber),
           x = "Windpark-ID",
           y = "Gesamtleistung (MW)") +
      theme_minimal()
  })
  
  # Leaflet-Karte
  output$mapPlot <- renderLeaflet({
    leaflet(data = filteredData()) %>%
      addTiles() %>%
      addMarkers(~lon, ~lat,
                 popup = ~paste0("<b>", Name.des.Windparks, "</b><br>",
                                 "Leistung: ", Gesamtleistung..MW., " MW"))
  })
}

# App starten
shinyApp(ui, server)

```

